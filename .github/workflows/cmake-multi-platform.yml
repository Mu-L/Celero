name: CMake on multiple platforms

on:
  push:
    branches: ["master", "develop"]
  pull_request:
    branches: ["master", "develop"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Test on both current and supported LTS runners
        os:
          - ubuntu-latest # default Ubuntu LTS
          - windows-latest # default Windows Server (2022)
        build_type: [Debug, Release]
        compiler:
          - name: gcc-9
            cc: gcc-9
            cxx: g++-9
          - name: gcc-10
            cc: gcc-10
            cxx: g++-10
          - name: gcc-11
            cc: gcc-11
            cxx: g++-11
          - name: clang-12
            cc: clang-12
            cxx: clang++-12
          - name: clang-13
            cc: clang-13
            cxx: clang++-13
          - name: cl
            cc: cl
            cxx: cl
        exclude:
          - os: windows-latest
            compiler:
              name: gcc-9
          - os: windows-latest
            compiler:
              name: gcc-10
          - os: windows-latest
            compiler:
              name: gcc-11
          - os: windows-latest
            compiler:
              name: clang-12
          - os: windows-latest
            compiler:
              name: clang-13

    steps:
      - uses: actions/checkout@v3

      # 1. Bootstrap vcpkg (manifest mode picks up your builtin-baseline)
      - name: Setup vcpkg
        id: vcpkg
        uses: johnwason/vcpkg-action@v7.0.1
        with:
          manifest-dir: ${{ github.workspace }}
          triplet: x64-${{ matrix.os == 'windows-latest' && 'windows' || 'linux' }}
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      # 2. Configure CMake with vcpkg's toolchain + turn tests ON
      - name: Configure (Linux)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          cmake -S . -B build \
            ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DCELERO_ENABLE_TESTS=ON

      - name: Configure (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          cmake -S . -B build ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DCELERO_ENABLE_TESTS=ON

      # 3. Build everything
      - name: Build
        shell: bash
        run: cmake --build build --config ${{ matrix.build_type }}

      # 4. Run the Google Test suite
      - name: Run tests
        shell: bash
        run: |
          cd build
          ctest --output-on-failure -C ${{ matrix.build_type }}
